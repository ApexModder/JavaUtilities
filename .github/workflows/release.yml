# GitHub Action to auto-magically publish versions
# for tagged commits
name: release

# Run on every push (with version tag)
on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-18.04

    # Required for publishing to GH Packages
    permissions:
      contents: write
      packages: write

    steps:
      # Obtain tag name (version number)
      - uses: olegtarasov/get-tag@v2.1
        id: tagName

      # Checkout repository & Setup JDK
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 16

      # Setup & Restore caches
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle

      # Remove problematic files
      - name: Cleanup Gradle Cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties

      - uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper

      # Validate Gradle Wrapper
      - uses: gradle/wrapper-validation-action@v1
      - run: chmod +x ./gradlew

      # Generate Minecraft Assets & Data files
      - run: ./gradlew Data # `Data` should match the `runData` gradle task name
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Build package
      - run: ./gradlew build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE: ${{ steps.tagName.outputs.tag }}

      # Publish to GitHub Packages
      - run: ./gradlew publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE: ${{ steps.tagName.outputs.tag }}

      # Publish GH release
      - uses: softprops/action-gh-release@v1
        id: ghRelease
        with:
          body: Auto-Generated GitHub Release - ${{ steps.tagName.outputs.tag }}
          name: ${{ steps.tagName.outputs.tag }}
          files: ./build/libs/*.jar

      # Kill gradlew deamon (caching requires gradle to not be running)
      - run: ./gradlew --stop

      # Remove problematic files
      - name: Cleanup Gradle Cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties